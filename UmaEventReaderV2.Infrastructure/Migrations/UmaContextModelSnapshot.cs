// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UmaEventReaderV2.Infrastructure;

#nullable disable

namespace UmaEventReaderV2.Infrastructure.Migrations
{
    [DbContext(typeof(UmaContext))]
    partial class UmaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UmaEventReaderV2.Models.Entities.UmaEventChoiceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("ChoiceNumber")
                        .HasColumnType("integer");

                    b.Property<string>("ChoiceText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SuccessType")
                        .HasColumnType("integer");

                    b.Property<long>("UmaEventId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UmaEventId");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("UmaEventReaderV2.Models.Entities.UmaEventChoiceOutcomeEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UmaEventChoiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UmaEventChoiceId");

                    b.ToTable("Outcomes");
                });

            modelBuilder.Entity("UmaEventReaderV2.Models.Entities.UmaEventEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("UmaEventReaderV2.Models.Entities.UmaEventChoiceEntity", b =>
                {
                    b.HasOne("UmaEventReaderV2.Models.Entities.UmaEventEntity", "UmaEvent")
                        .WithMany("Choices")
                        .HasForeignKey("UmaEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UmaEvent");
                });

            modelBuilder.Entity("UmaEventReaderV2.Models.Entities.UmaEventChoiceOutcomeEntity", b =>
                {
                    b.HasOne("UmaEventReaderV2.Models.Entities.UmaEventChoiceEntity", "UmaEventChoice")
                        .WithMany("Outcomes")
                        .HasForeignKey("UmaEventChoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UmaEventChoice");
                });

            modelBuilder.Entity("UmaEventReaderV2.Models.Entities.UmaEventChoiceEntity", b =>
                {
                    b.Navigation("Outcomes");
                });

            modelBuilder.Entity("UmaEventReaderV2.Models.Entities.UmaEventEntity", b =>
                {
                    b.Navigation("Choices");
                });
#pragma warning restore 612, 618
        }
    }
}
